<?xml version="1.0"?>
<display:RunView xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
                 xmlns:display="com.vango.testing.performance.viewer.run.display.*"
                 xmlns:display2="com.vango.testing.performance.viewer.controls.display.*"
                 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%">
    <display:states>
        <s:State name="unverified"/>
        <s:State name="verified"/>
        <s:State name="running"/>
    </display:states>
    <display:layout>
        <s:VerticalLayout paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10"/>
    </display:layout>

    <s:Label text="Test Root" fontWeight="bold" fontSize="14"/>
    <display2:FileSelectorComponent id="fileSelector" browseWindowTitle="Select Test Directory" ref="testDirectory" select="onTestSelected(event)" width="100%"/>
    <s:VGroup visible.running="false" visible.unverified="false" visible.verified="true" width="100%" height="100%" paddingTop="10">
        <mx:VDividedBox width="100%" height="100%">
            <mx:HDividedBox width="100%" height="100%">
                <s:VGroup width="50%" height="100%">
                    <s:Label text="Source Tree" fontWeight="bold" fontSize="14"/>
                    <mx:Tree id="sourceTree" dataProvider="{sourceList}" labelField="name" width="100%" height="100%" itemRenderer="{treeRendererFactory}" useRollOver="false"
                        iconFunction="{getIconFromData}" change="{onTreeItemSelected(event)}"/>
                </s:VGroup>
                <s:VGroup width="50%" height="100%">
                    <s:Label text="Selected Tests" fontWeight="bold" fontSize="14"/>
                    <s:List id="testSelector" width="100%" height="100%" dataProvider="{testList}" labelField="relativeName" itemRenderer="{listRendererFactory}" change="{onListItemSelected(event)}"/>
                </s:VGroup>
            </mx:HDividedBox>
            <s:VGroup width="100%" height="100%">
                <s:Label text="Compiler Options" fontWeight="bold" fontSize="14"/>
                <s:TextArea width="100%" height="100%"/>
            </s:VGroup>
        </mx:VDividedBox>
        <s:Button label.verified="Execute Tests" label.running="Wait..."
                  enabled.running="false" visible.unverified="false" visible.verified="true" click="runTests(event);"/>
    </s:VGroup>

    <fx:Script><![CDATA[
        import com.vango.testing.performance.viewer.run.display.list.TestListItemRendererFactory;
        import com.vango.testing.performance.viewer.run.display.tree.TestTreeItemRendererFactory;
        import com.vango.testing.performance.viewer.run.vo.AS3TreeNode;

        import mx.events.ListEvent;

        import spark.events.IndexChangeEvent;

        private var treeRendererFactory:TestTreeItemRendererFactory = new TestTreeItemRendererFactory();
        private var listRendererFactory:TestListItemRendererFactory = new TestListItemRendererFactory();

        [Embed("../../../../../../../../resources/Places-folder-green-icon.png")]
        public var testFolder:Class;
        [Embed("../../../../../../../../resources/Places-folder-blue-icon.png")]
        public var sourceFolder:Class;
        [Embed("../../../../../../../../resources/Places-file-blue-icon.png")]
        public var sourceFile:Class;

        /**
         * Retrieves a tree icon to use from the node data assigned to it
         */
        private function getIconFromData(data:AS3TreeNode):Class
        {
            if (data.children != null)
            {
                return data.containsTest ? testFolder : sourceFolder;
            }
            else
            {
                return data.isTest ? null : sourceFile;
            }
        }

        /**
         * Handles a list item being selected
         */
        private function onListItemSelected(event:IndexChangeEvent):void
        {
            expandParents(testSelector.selectedItem);
            sourceTree.selectedItem = testSelector.selectedItem;
            var idx:int = sourceTree.getItemIndex(testSelector.selectedItem);
            sourceTree.scrollToIndex(idx);
        }

        private function onTreeItemSelected(event:ListEvent):void
        {
            testSelector.selectedItem = sourceTree.selectedItem;
        }

        /**
         * Expands all the elements of a tree item
         */
        private function expandParents(node:AS3TreeNode):void
        {
            if (node)
            {
                if (!sourceTree.isItemOpen(node))
                {
                    sourceTree.expandItem(node, true);
                }
                expandParents(node.parent);
            }
        }
        ]]></fx:Script>
</display:RunView>
